generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//tabela de admnistrador
model Admin {
  id       String @id @default(uuid())
  name     String
  email    String
  password String

  schedules    Scheduling[]
  professional Professional[]

  createdAt DateTime @default(now())

  @@map("admin")
}

//tabela de profissional
model Professional {
  id                String       @id @default(uuid())
  name              String
  cpf               String
  professionalTitle String
  password          String
  createdAt         DateTime     @default(now())
  adminId           String?
  schedules         Scheduling[]
  Admin             Admin?       @relation(fields: [adminId], references: [id])

  @@map("professional")
}

//tabela de inspetorias
model Inspectorate {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())

  rooms     Room[]
  schedules Scheduling[]

  @@map("inspectorate")
}

//tabela de salas
model Room {
  id           String  @id @default(uuid())
  name         String
  description  String?
  inspetoriaId String

  inspectorates Inspectorate @relation(fields: [inspetoriaId], references: [id])

  @@map("room")
}

//tabela de agendamento de sala
model Scheduling {
  id             String   @id @default(uuid())
  title          String
  professionalId String
  inspectorateId String
  dateInitial    DateTime
  dateFinish     DateTime
  status         String   @default("agendamento pendente")
  messageStatus  String?
  adminId        String?

  professional Professional @relation(fields: [professionalId], references: [id])
  inspectorate Inspectorate @relation(fields: [inspectorateId], references: [id])
  Admin        Admin?       @relation(fields: [adminId], references: [id])

  @@map("scheduling")
}
